using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ViGEmClient.Net.Demo
{
    static class Reports
    {
        public static byte[] Default_0x21 => new byte[]
        {
            0x21, 0xA7, 0x91, 0x00, 0x80, 0x00, 0x90, 0x38, 0x60, 0xFB, 0xF8, 0x12, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        };

        public static Dictionary<ulong, byte[]> FlashDataMap = new Dictionary<ulong, byte[]>
        {
            [0xE0600000] = new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            [0x20600000] = new byte[] 
            {
                0x5E, 0x00, 0xB2, 0xFF, 0x28, 0x01, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40,
                0xB6, 0xFF, 0xD2, 0xFF, 0xBD, 0xFF, 0x3B, 0x34, 0x3B, 0x34, 0x3B, 0x34
            },
            [0x80600000] = new byte[] { 0x50, 0xFD, 0x00, 0x00, 0xC6, 0x0F },
            [0x3D600000] = new byte[] 
            {
                0xF2, 0x45, 0x66, 0x6F, 0xA7, 0x76, 0xFA, 0xB5, 0x5D, 0x3A, 0x68, 0x74,
                0x54, 0x06, 0x5F, 0xC2, 0xC5, 0x62
            }
        };




        public static byte[] Packet_0x21 => new byte[]
        {
            0x21, 0xA7, 0x91, 0x00, 0x80, 0x00, 0x90, 0x38, 0x60, 0xFB, 0xF8, 0x12, 0x00, 0x80, 0x03, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        };

        public static byte[] Packet_0x8101 => new byte[]
        {
            0x81, 0x01, 0x00, 0x03, 0xF7, 0x45, 0x42, 0xD6, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        };

        public static byte[] Packet_0x8102 => new byte[]
        {
            0x81, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        };

        public static byte[] Packet_0x8103 => new byte[]
        {
            0x81, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        };

        public static byte[] Packet_0x8104 => new byte[]
        {
            0x30, 0x51, 0x91, 0x00, 0x80, 0x00, 0x84, 0xA7, 0x74, 0x5F, 0xE8, 0x71, 0x0C, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        };

        public static byte[] GetResponse(byte[] request, ref bool isTimerEnable)
        {
            isTimerEnable = false;

            byte[] result = null;
            var twoBytesValue = BitConverter.ToUInt16(new[] { request[1], request[0] }, 0);
            switch (twoBytesValue)
            {
                case 0x0100:
                case 0x0101:
                case 0x0102:
                case 0x0103:
                case 0x0104:
                case 0x0105:
                case 0x0106:
                case 0x0107:
                case 0x0108:
                case 0x0109:
                case 0x010A:
                    result = Packet_0x21;
                    break;
                case 0x8001:
                    result = Packet_0x8101;
                    break;
                case 0x8002:
                    result = Packet_0x8102;
                    break;
                case 0x8003:
                    result = Packet_0x8103;
                    break;
                case 0x8004:
                    result = Packet_0x8104;
                    isTimerEnable = true;
                    break;
            }

            return result;
        }
    }
}
